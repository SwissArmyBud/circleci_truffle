## Circle CI config for testing with:
## - CI workflows
## - Multiple languages
## - Branch filtering for jobs

jobs:

#----------------------------------------#
#-- UNIT TESTING FOR SOLIDITY BRANCHES --#
#----------------------------------------#
  unit_test_truffle:
    docker:
      # Primary docker image containing nodejs
      - image: circleci/node:10.14.2 # Latest LTS

      # Start a ganache test suite inside the primary image
      - image: trufflesuite/ganache-cli
        command: [ -p, "8080",          # PORT
                   -i, "4321",          # NETWORK ID
                   -a, "15",            # NUMBER OF ACCTS
                   -e, "1000000000000", # START BAL
                   -l, "7600000",       # GAS LIMIT
                   -g, "20000000000",   # GAS COST
                 ]

    working_directory: ~/repo

    steps:

      # Install global node modules as sudo
      - run: sudo npm i -g truffle

      # Grab the repo
      - checkout

      # Get/cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # Install/update dependencies as needed
      - run: npm i

      # Set/save cache
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # Run tests via "test" script in package.json
      - run: npm run unit_test_sol
      # Store testing artifacts
      - store_artifacts:
          path: ~/repo/services/artifacts

#--------------------------------------#
#-- UNIT TESTING FOR NODEJS BRANCHES --#
#--------------------------------------#
  unit_test_node:
    docker:
      # Primary docker image containing nodejs
      - image: circleci/node:10.14.2 # Latest LTS

    working_directory: ~/repo

    steps:

      # Get repository from VCS
      - checkout

      # Get/cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # Install/update dependencies as needed
      - run: npm i

      # Set/save cache
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # Run tests via "test" script in package.json
      - run: npm run unit_test_js
      # Store testing artifacts
      - store_artifacts:
          path: ~/repo/services/artifacts

#--------------------------------------#
#-- UNIT TESTING FOR GOLANG BRANCHES --#
#--------------------------------------#
  unit_test_go:
    docker:
      # Primary docker image containing golang
      - image: circleci/golang:1.11

    working_directory: ~/repo

    steps:

      # Get repository from VCS
      - checkout

      # Run test suite script
      - run: ./services/config/test-go.sh
      # Store testing artifacts
      - store_artifacts:
          path: ~/repo/services/artifacts

#----------------------------------------#
#-- UNIT TESTING FOR DARTLANG BRANCHES --#
#----------------------------------------#
  unit_test_dart:
    docker:
      # Primary docker image containing nodejs and bundled browsers
      - image: swissarmybud/dart:2.1

    working_directory: ~/repo

    steps:
      # Get repository from VCS
      - checkout

      # Run test suite script
      - run: ./services/config/test-dart.sh
      # Store testing artifacts
      - store_artifacts:
          path: ~/repo/services/artifacts

workflows:
  version: 2
  testing-suite:
    jobs:
      - unit_test_go:
          filters:
            branches:
              only: /(^go\-.*)|(^unit\-test.*)|(^staging\-.*)/
      - unit_test_truffle:
          filters:
            branches:
              only: /(^sol\-.*)|(^unit\-test.*)|(^staging\-.*)/
      - unit_test_js:
          filters:
            branches:
              only: /(^js\-.*)|(^unit\-test.*)|(^staging\-.*)/
      - unit_test_dart:
          filters:
            branches:
              only: /(^dart\-.*)|(^unit\-test.*)|(^staging\-.*)/
